<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classbidirectional_1_1DiGraph" kind="class" language="C++" prot="public">
    <compoundname>bidirectional::DiGraph</compoundname>
    <includes refid="digraph_8h" local="no">digraph.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classbidirectional_1_1DiGraph_1a55a3ad47c4958000a7b68e0afd566d4f" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int bidirectional::DiGraph::number_vertices</definition>
        <argsstring></argsstring>
        <name>number_vertices</name>
        <briefdescription>
<para>int. Number of nodes/vertices in the graph. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/cspy/cspy/torressa/cspy/src/cc/digraph.h" line="69" column="1" bodyfile="/__w/cspy/cspy/torressa/cspy/src/cc/digraph.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbidirectional_1_1DiGraph_1a8c53e94a9b9e41a50e0f3ecf348d1b87" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int bidirectional::DiGraph::number_edges</definition>
        <argsstring></argsstring>
        <name>number_edges</name>
        <briefdescription>
<para>int. Number of arcs/edges in the graph. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/cspy/cspy/torressa/cspy/src/cc/digraph.h" line="71" column="1" bodyfile="/__w/cspy/cspy/torressa/cspy/src/cc/digraph.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbidirectional_1_1DiGraph_1a8a790a14fd031fbe7a95fefe5f01fa0c" prot="public" static="no" mutable="no">
        <type><ref refid="structbidirectional_1_1Vertex" kindref="compound">Vertex</ref></type>
        <definition>Vertex bidirectional::DiGraph::source</definition>
        <argsstring></argsstring>
        <name>source</name>
        <briefdescription>
<para>Source and sink vertices. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/cspy/cspy/torressa/cspy/src/cc/digraph.h" line="73" column="1" bodyfile="/__w/cspy/cspy/torressa/cspy/src/cc/digraph.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbidirectional_1_1DiGraph_1a11aab634efaff2bdbdbd77436d799206" prot="public" static="no" mutable="no">
        <type><ref refid="structbidirectional_1_1Vertex" kindref="compound">Vertex</ref></type>
        <definition>Vertex bidirectional::DiGraph::sink</definition>
        <argsstring></argsstring>
        <name>sink</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/cspy/cspy/torressa/cspy/src/cc/digraph.h" line="74" column="1" bodyfile="/__w/cspy/cspy/torressa/cspy/src/cc/digraph.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbidirectional_1_1DiGraph_1a8acd5e0889d880b5b98d1c67a356c4e2" prot="public" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="digraph_8h_1a537ef8dbf2625a2629b10f4121e6db2b" kindref="member">LemonGraph</ref> &gt;</type>
        <definition>std::unique_ptr&lt;LemonGraph&gt; bidirectional::DiGraph::lemon_graph_ptr</definition>
        <argsstring></argsstring>
        <name>lemon_graph_ptr</name>
        <briefdescription>
<para>Pointer to lemon graph (in this case lemon::SmartDigraph) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/cspy/cspy/torressa/cspy/src/cc/digraph.h" line="76" column="1" bodyfile="/__w/cspy/cspy/torressa/cspy/src/cc/digraph.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbidirectional_1_1DiGraph_1a19b9b7f89e09c77cfeb5ce3a19f2e677" prot="public" static="no" mutable="no">
        <type>std::unique_ptr&lt; LemonGraph::ArcMap&lt; double &gt; &gt;</type>
        <definition>std::unique_ptr&lt;LemonGraph::ArcMap&lt;double&gt; &gt; bidirectional::DiGraph::weight_map_ptr</definition>
        <argsstring></argsstring>
        <name>weight_map_ptr</name>
        <briefdescription>
<para>Pointer to lemon map containing arc weights/costs. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/cspy/cspy/torressa/cspy/src/cc/digraph.h" line="78" column="1" bodyfile="/__w/cspy/cspy/torressa/cspy/src/cc/digraph.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbidirectional_1_1DiGraph_1acfed46f3f0adb003d0c90d713c1418cb" prot="public" static="no" mutable="no">
        <type>std::unique_ptr&lt; LemonGraph::ArcMap&lt; std::vector&lt; double &gt; &gt; &gt;</type>
        <definition>std::unique_ptr&lt;LemonGraph::ArcMap&lt;std::vector&lt;double&gt; &gt; &gt; bidirectional::DiGraph::res_map_ptr</definition>
        <argsstring></argsstring>
        <name>res_map_ptr</name>
        <briefdescription>
<para>Pointer to lemon map containing arc resource consumptions. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/cspy/cspy/torressa/cspy/src/cc/digraph.h" line="80" column="1" bodyfile="/__w/cspy/cspy/torressa/cspy/src/cc/digraph.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbidirectional_1_1DiGraph_1ac1922b68a5f05cc890fcad5acf0b4c35" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structbidirectional_1_1Vertex" kindref="compound">Vertex</ref> &gt;</type>
        <definition>std::vector&lt;Vertex&gt; bidirectional::DiGraph::vertices</definition>
        <argsstring></argsstring>
        <name>vertices</name>
        <briefdescription>
<para>Vector with vertices. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/cspy/cspy/torressa/cspy/src/cc/digraph.h" line="82" column="1" bodyfile="/__w/cspy/cspy/torressa/cspy/src/cc/digraph.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classbidirectional_1_1DiGraph_1a1c54a9fd07eb5f07401bdbdee02ff01e" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int bidirectional::DiGraph::source_id_</definition>
        <argsstring></argsstring>
        <name>source_id_</name>
        <briefdescription>
<para>int. User id corresponding to the source_node in the graph. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/cspy/cspy/torressa/cspy/src/cc/digraph.h" line="214" column="1" bodyfile="/__w/cspy/cspy/torressa/cspy/src/cc/digraph.h" bodystart="214" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbidirectional_1_1DiGraph_1a2d4baaabb664028a91bf1b9857a9f75f" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int bidirectional::DiGraph::sink_id_</definition>
        <argsstring></argsstring>
        <name>sink_id_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/cspy/cspy/torressa/cspy/src/cc/digraph.h" line="214" column="1" bodyfile="/__w/cspy/cspy/torressa/cspy/src/cc/digraph.h" bodystart="214" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classbidirectional_1_1DiGraph_1a8c15d18a0760e40039441081aa88a51b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>bidirectional::DiGraph::DiGraph</definition>
        <argsstring>(const int &amp;num_nodes_in, const int &amp;num_arcs_in, const int &amp;source_id_in, const int &amp;sink_id_in)</argsstring>
        <name>DiGraph</name>
        <param>
          <type>const int &amp;</type>
          <declname>num_nodes_in</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>num_arcs_in</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>source_id_in</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>sink_id_in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor. Allocates memory for the number of nodes/arcs (uses LEMON allocators) and saves source/sink user ids.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">num_nodes_in</parametername>
<parametername direction="in">int.</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of nodes in the graph. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">num_arcs_in</parametername>
<parametername direction="in">int.</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of arcs in the graph. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source_id_in</parametername>
<parametername direction="in">int.</parametername>
</parameternamelist>
<parameterdescription>
<para>User id for source node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sink_id_in</parametername>
<parametername direction="in">int.</parametername>
</parameternamelist>
<parameterdescription>
<para>User id for sink node. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/cspy/cspy/torressa/cspy/src/cc/digraph.h" line="94" column="1" bodyfile="/__w/cspy/cspy/torressa/cspy/src/cc/digraph.cc" bodystart="7" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="classbidirectional_1_1DiGraph_1a483c50e9b5b483472ae7ee2910f3bcda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bidirectional::DiGraph::addNodes</definition>
        <argsstring>(const std::vector&lt; int &gt; &amp;user_nodes)</argsstring>
        <name>addNodes</name>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>user_nodes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add nodes to LEMON SmartDigraph.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">user_nodes</parametername>
<parametername direction="in">vector</parametername>
</parameternamelist>
<parameterdescription>
<para>of int. Array with user nodes </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/cspy/cspy/torressa/cspy/src/cc/digraph.h" line="107" column="1" bodyfile="/__w/cspy/cspy/torressa/cspy/src/cc/digraph.cc" bodystart="26" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classbidirectional_1_1DiGraph_1acc46372f63c1736a81a11b6b533c564b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bidirectional::DiGraph::addEdge</definition>
        <argsstring>(const int &amp;tail, const int &amp;head, const double &amp;weight, const std::vector&lt; double &gt; &amp;resource_consumption)</argsstring>
        <name>addEdge</name>
        <param>
          <type>const int &amp;</type>
          <declname>tail</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>head</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>const std::vector&lt; double &gt; &amp;</type>
          <declname>resource_consumption</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add arcs to LEMON SmartDigraph.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">tail</parametername>
<parametername direction="in">int.</parametername>
</parameternamelist>
<parameterdescription>
<para>User id for tail node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">head</parametername>
<parametername direction="in">int.</parametername>
</parameternamelist>
<parameterdescription>
<para>User id for head node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">weight</parametername>
<parametername direction="in">double.</parametername>
</parameternamelist>
<parameterdescription>
<para>Arc weight/cost. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">resource_consumption</parametername>
<parametername direction="in">vector</parametername>
</parameternamelist>
<parameterdescription>
<para>of double. Array with consumption of resources for this arc. Optional (may be empty if custom REFs are defined). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/cspy/cspy/torressa/cspy/src/cc/digraph.h" line="119" column="1" bodyfile="/__w/cspy/cspy/torressa/cspy/src/cc/digraph.cc" bodystart="46" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classbidirectional_1_1DiGraph_1aa0379cf603a76b85a8ef3ca5ad03d4af" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="digraph_8h_1a9e28ff6f29770c88642a42cab9f42fed" kindref="member">LemonNode</ref></type>
        <definition>LemonNode bidirectional::DiGraph::head</definition>
        <argsstring>(const LemonArc &amp;arc) const</argsstring>
        <name>head</name>
        <param>
          <type>const <ref refid="digraph_8h_1ae6cfd87753a14ebe6d11871314aff34d" kindref="member">LemonArc</ref> &amp;</type>
          <declname>arc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Extract head node for a given arc.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">arc</parametername>
<parametername direction="in">lemon::SmartDigraph::Arc.</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>lemon::SmartDigraph::Node with head of arc </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/cspy/cspy/torressa/cspy/src/cc/digraph.h" line="133" column="1" bodyfile="/__w/cspy/cspy/torressa/cspy/src/cc/digraph.h" bodystart="133" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="classbidirectional_1_1DiGraph_1a0be9d9f87409f523306babcfef8a7f46" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="digraph_8h_1a9e28ff6f29770c88642a42cab9f42fed" kindref="member">LemonNode</ref></type>
        <definition>LemonNode bidirectional::DiGraph::tail</definition>
        <argsstring>(const LemonArc &amp;arc) const</argsstring>
        <name>tail</name>
        <param>
          <type>const <ref refid="digraph_8h_1ae6cfd87753a14ebe6d11871314aff34d" kindref="member">LemonArc</ref> &amp;</type>
          <declname>arc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Extract tail node for a given arc.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">arc</parametername>
<parametername direction="in">lemon::SmartDigraph::Arc.</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>lemon::SmartDigraph::Node with tail of arc </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/cspy/cspy/torressa/cspy/src/cc/digraph.h" line="143" column="1" bodyfile="/__w/cspy/cspy/torressa/cspy/src/cc/digraph.h" bodystart="143" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="classbidirectional_1_1DiGraph_1a5cd2ea6516bd348ca542115cbc94b239" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structbidirectional_1_1AdjVertex" kindref="compound">AdjVertex</ref></type>
        <definition>AdjVertex bidirectional::DiGraph::getAdjVertex</definition>
        <argsstring>(const LemonArc &amp;arc, const bool &amp;forward) const</argsstring>
        <name>getAdjVertex</name>
        <param>
          <type>const <ref refid="digraph_8h_1ae6cfd87753a14ebe6d11871314aff34d" kindref="member">LemonArc</ref> &amp;</type>
          <declname>arc</declname>
        </param>
        <param>
          <type>const bool &amp;</type>
          <declname>forward</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Extract lemon id for a given node</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">arc</parametername>
<parametername direction="in">lemon::SmartDigraph::Arc.</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">forward</parametername>
<parametername direction="in">bool.</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether arc is checked forward or not (backward). </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="structbidirectional_1_1AdjVertex" kindref="compound">AdjVertex</ref> with arc information </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/cspy/cspy/torressa/cspy/src/cc/digraph.h" line="154" column="1" bodyfile="/__w/cspy/cspy/torressa/cspy/src/cc/digraph.cc" bodystart="59" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classbidirectional_1_1DiGraph_1a966eb000fda1f5dac268f8f4ae6b19cb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="digraph_8h_1a9e28ff6f29770c88642a42cab9f42fed" kindref="member">LemonNode</ref></type>
        <definition>LemonNode bidirectional::DiGraph::getLNodeFromId</definition>
        <argsstring>(const int &amp;id) const</argsstring>
        <name>getLNodeFromId</name>
        <param>
          <type>const int &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Extract lemon node from a given lemon id</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">id</parametername>
<parametername direction="in">lemon::SmartDigraph::Arc.</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>lemon::SmartDigraph::Node corresponding to the lemon id </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/cspy/cspy/torressa/cspy/src/cc/digraph.h" line="162" column="1" bodyfile="/__w/cspy/cspy/torressa/cspy/src/cc/digraph.h" bodystart="162" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="classbidirectional_1_1DiGraph_1a9b6d435d6eac3751da5b2ee427826657" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bidirectional::DiGraph::getNodeIdFromUserId</definition>
        <argsstring>(const int &amp;user_id) const</argsstring>
        <name>getNodeIdFromUserId</name>
        <param>
          <type>const int &amp;</type>
          <declname>user_id</declname>
        </param>
        <briefdescription>
<para>For conversion between user node labels and LemonGraph internal. </para>        </briefdescription>
        <detaileddescription>
<para>Extract lemon id from a given user id</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">user_id</parametername>
<parametername direction="in">int.</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int with lemon id </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/cspy/cspy/torressa/cspy/src/cc/digraph.h" line="172" column="1" bodyfile="/__w/cspy/cspy/torressa/cspy/src/cc/digraph.cc" bodystart="74" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classbidirectional_1_1DiGraph_1aba1a01186d95c4a9ac73031ed1de5432" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structbidirectional_1_1Vertex" kindref="compound">Vertex</ref></type>
        <definition>Vertex bidirectional::DiGraph::getVertexFromLNode</definition>
        <argsstring>(const LemonNode &amp;node) const</argsstring>
        <name>getVertexFromLNode</name>
        <param>
          <type>const <ref refid="digraph_8h_1a9e28ff6f29770c88642a42cab9f42fed" kindref="member">LemonNode</ref> &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Extract lemon id for a given node</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">node</parametername>
<parametername direction="in">lemon::SmartDigraph::Node.</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="structbidirectional_1_1Vertex" kindref="compound">Vertex</ref> corresponding to the lemon node </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/cspy/cspy/torressa/cspy/src/cc/digraph.h" line="180" column="1" bodyfile="/__w/cspy/cspy/torressa/cspy/src/cc/digraph.h" bodystart="180" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="classbidirectional_1_1DiGraph_1afed51610b271cdaa05168f3a38ad8e07" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double bidirectional::DiGraph::getWeight</definition>
        <argsstring>(const LemonArc &amp;arc) const</argsstring>
        <name>getWeight</name>
        <param>
          <type>const <ref refid="digraph_8h_1ae6cfd87753a14ebe6d11871314aff34d" kindref="member">LemonArc</ref> &amp;</type>
          <declname>arc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Extract arc weight from arc map</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">arc</parametername>
<parametername direction="in">lemon::SmartDigraph::Arc.</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>double with arc weight </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/cspy/cspy/torressa/cspy/src/cc/digraph.h" line="190" column="1" bodyfile="/__w/cspy/cspy/torressa/cspy/src/cc/digraph.h" bodystart="190" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="classbidirectional_1_1DiGraph_1a7b16dcef9b23770124b19a295f06178a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int bidirectional::DiGraph::getId</definition>
        <argsstring>(const LemonArc &amp;arc) const</argsstring>
        <name>getId</name>
        <param>
          <type>const <ref refid="digraph_8h_1ae6cfd87753a14ebe6d11871314aff34d" kindref="member">LemonArc</ref> &amp;</type>
          <declname>arc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Extract lemon id for a given arc</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">arc</parametername>
<parametername direction="in">lemon::SmartDigraph::Arc.</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int with lemon id for the arc </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/cspy/cspy/torressa/cspy/src/cc/digraph.h" line="198" column="1" bodyfile="/__w/cspy/cspy/torressa/cspy/src/cc/digraph.h" bodystart="198" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="classbidirectional_1_1DiGraph_1afb87bafec6ea1764bd19509f0b0ca4e9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int bidirectional::DiGraph::getId</definition>
        <argsstring>(const LemonNode &amp;node) const</argsstring>
        <name>getId</name>
        <param>
          <type>const <ref refid="digraph_8h_1a9e28ff6f29770c88642a42cab9f42fed" kindref="member">LemonNode</ref> &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Extract lemon id for a given node</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">node</parametername>
<parametername direction="in">lemon::SmartDigraph::Node.</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int with lemon id for then node </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/cspy/cspy/torressa/cspy/src/cc/digraph.h" line="206" column="1" bodyfile="/__w/cspy/cspy/torressa/cspy/src/cc/digraph.h" bodystart="206" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="classbidirectional_1_1DiGraph_1a45a3d6b4164c0881cdad5ab23aa9eda8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classbidirectional_1_1ResourceMap" kindref="compound">ResourceMap</ref></type>
        <definition>ResourceMap bidirectional::DiGraph::getResourceMap</definition>
        <argsstring>(const int &amp;r) const</argsstring>
        <name>getResourceMap</name>
        <param>
          <type>const int &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/cspy/cspy/torressa/cspy/src/cc/digraph.h" line="208" column="1" bodyfile="/__w/cspy/cspy/torressa/cspy/src/cc/digraph.h" bodystart="208" bodyend="210"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classbidirectional_1_1DiGraph_1acd7420a67e9cfe182a92f60cc67599d8" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; bidirectional::DiGraph::getRes</definition>
        <argsstring>(const LemonArc &amp;arc) const</argsstring>
        <name>getRes</name>
        <param>
          <type>const <ref refid="digraph_8h_1ae6cfd87753a14ebe6d11871314aff34d" kindref="member">LemonArc</ref> &amp;</type>
          <declname>arc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Extract arc resource consumption from arc map</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">arc</parametername>
<parametername direction="in">lemon::SmartDigraph::Arc.</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>vector of double with arc resource consumption </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/cspy/cspy/torressa/cspy/src/cc/digraph.h" line="222" column="1" bodyfile="/__w/cspy/cspy/torressa/cspy/src/cc/digraph.h" bodystart="222" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="classbidirectional_1_1DiGraph_1aa685ae766ec8f8ffb40517f4926c9d61" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="digraph_8h_1a9e28ff6f29770c88642a42cab9f42fed" kindref="member">LemonNode</ref></type>
        <definition>LemonNode bidirectional::DiGraph::getLNodeFromUserId</definition>
        <argsstring>(const int &amp;user_id) const</argsstring>
        <name>getLNodeFromUserId</name>
        <param>
          <type>const int &amp;</type>
          <declname>user_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Extract lemon node from a given lemon id</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">id</parametername>
<parametername direction="in">lemon::SmartDigraph::Arc.</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>lemon::SmartDigraph::Node corresponding to the lemon id </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/cspy/cspy/torressa/cspy/src/cc/digraph.h" line="232" column="1" bodyfile="/__w/cspy/cspy/torressa/cspy/src/cc/digraph.h" bodystart="232" bodyend="234"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Directed graph wrapper to create and query a lemon::SmartDigraph. <simplesect kind="see"><para>: <ulink url="https://lemon.cs.elte.hu/trac/lemon">https://lemon.cs.elte.hu/trac/lemon</ulink> </para></simplesect>
</para>    </detaileddescription>
    <collaborationgraph>
      <node id="17">
        <label>unique_ptr&lt; LemonGraph::ArcMap&lt; double &gt; &gt;</label>
      </node>
      <node id="12">
        <label>bidirectional::DiGraph</label>
        <link refid="classbidirectional_1_1DiGraph"/>
        <childnode refid="13" relation="usage">
          <edgelabel>+source</edgelabel>
          <edgelabel>+sink</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>+vertices</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>+number_edges</edgelabel>
          <edgelabel>+number_vertices</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>+res_map_ptr</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>+weight_map_ptr</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>+lemon_graph_ptr</edgelabel>
        </childnode>
      </node>
      <node id="18">
        <label>unique_ptr&lt; LemonGraph &gt;</label>
      </node>
      <node id="14">
        <label>int</label>
      </node>
      <node id="15">
        <label>vector&lt; bidirectional::Vertex &gt;</label>
      </node>
      <node id="16">
        <label>unique_ptr&lt; LemonGraph::ArcMap&lt; std::vector&lt; double &gt; &gt; &gt;</label>
      </node>
      <node id="13">
        <label>bidirectional::Vertex</label>
        <link refid="structbidirectional_1_1Vertex"/>
        <childnode refid="14" relation="usage">
          <edgelabel>+user_id</edgelabel>
          <edgelabel>+lemon_id</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/__w/cspy/cspy/torressa/cspy/src/cc/digraph.h" line="66" column="1" bodyfile="/__w/cspy/cspy/torressa/cspy/src/cc/digraph.h" bodystart="66" bodyend="235"/>
    <listofallmembers>
      <member refid="classbidirectional_1_1DiGraph_1acc46372f63c1736a81a11b6b533c564b" prot="public" virt="non-virtual"><scope>bidirectional::DiGraph</scope><name>addEdge</name></member>
      <member refid="classbidirectional_1_1DiGraph_1a483c50e9b5b483472ae7ee2910f3bcda" prot="public" virt="non-virtual"><scope>bidirectional::DiGraph</scope><name>addNodes</name></member>
      <member refid="classbidirectional_1_1DiGraph_1a8c15d18a0760e40039441081aa88a51b" prot="public" virt="non-virtual"><scope>bidirectional::DiGraph</scope><name>DiGraph</name></member>
      <member refid="classbidirectional_1_1DiGraph_1a5cd2ea6516bd348ca542115cbc94b239" prot="public" virt="non-virtual"><scope>bidirectional::DiGraph</scope><name>getAdjVertex</name></member>
      <member refid="classbidirectional_1_1DiGraph_1a7b16dcef9b23770124b19a295f06178a" prot="public" virt="non-virtual"><scope>bidirectional::DiGraph</scope><name>getId</name></member>
      <member refid="classbidirectional_1_1DiGraph_1afb87bafec6ea1764bd19509f0b0ca4e9" prot="public" virt="non-virtual"><scope>bidirectional::DiGraph</scope><name>getId</name></member>
      <member refid="classbidirectional_1_1DiGraph_1a966eb000fda1f5dac268f8f4ae6b19cb" prot="public" virt="non-virtual"><scope>bidirectional::DiGraph</scope><name>getLNodeFromId</name></member>
      <member refid="classbidirectional_1_1DiGraph_1aa685ae766ec8f8ffb40517f4926c9d61" prot="private" virt="non-virtual"><scope>bidirectional::DiGraph</scope><name>getLNodeFromUserId</name></member>
      <member refid="classbidirectional_1_1DiGraph_1a9b6d435d6eac3751da5b2ee427826657" prot="public" virt="non-virtual"><scope>bidirectional::DiGraph</scope><name>getNodeIdFromUserId</name></member>
      <member refid="classbidirectional_1_1DiGraph_1acd7420a67e9cfe182a92f60cc67599d8" prot="private" virt="non-virtual"><scope>bidirectional::DiGraph</scope><name>getRes</name></member>
      <member refid="classbidirectional_1_1DiGraph_1a45a3d6b4164c0881cdad5ab23aa9eda8" prot="public" virt="non-virtual"><scope>bidirectional::DiGraph</scope><name>getResourceMap</name></member>
      <member refid="classbidirectional_1_1DiGraph_1aba1a01186d95c4a9ac73031ed1de5432" prot="public" virt="non-virtual"><scope>bidirectional::DiGraph</scope><name>getVertexFromLNode</name></member>
      <member refid="classbidirectional_1_1DiGraph_1afed51610b271cdaa05168f3a38ad8e07" prot="public" virt="non-virtual"><scope>bidirectional::DiGraph</scope><name>getWeight</name></member>
      <member refid="classbidirectional_1_1DiGraph_1aa0379cf603a76b85a8ef3ca5ad03d4af" prot="public" virt="non-virtual"><scope>bidirectional::DiGraph</scope><name>head</name></member>
      <member refid="classbidirectional_1_1DiGraph_1a8acd5e0889d880b5b98d1c67a356c4e2" prot="public" virt="non-virtual"><scope>bidirectional::DiGraph</scope><name>lemon_graph_ptr</name></member>
      <member refid="classbidirectional_1_1DiGraph_1a8c53e94a9b9e41a50e0f3ecf348d1b87" prot="public" virt="non-virtual"><scope>bidirectional::DiGraph</scope><name>number_edges</name></member>
      <member refid="classbidirectional_1_1DiGraph_1a55a3ad47c4958000a7b68e0afd566d4f" prot="public" virt="non-virtual"><scope>bidirectional::DiGraph</scope><name>number_vertices</name></member>
      <member refid="classbidirectional_1_1DiGraph_1acfed46f3f0adb003d0c90d713c1418cb" prot="public" virt="non-virtual"><scope>bidirectional::DiGraph</scope><name>res_map_ptr</name></member>
      <member refid="classbidirectional_1_1DiGraph_1a11aab634efaff2bdbdbd77436d799206" prot="public" virt="non-virtual"><scope>bidirectional::DiGraph</scope><name>sink</name></member>
      <member refid="classbidirectional_1_1DiGraph_1a2d4baaabb664028a91bf1b9857a9f75f" prot="private" virt="non-virtual"><scope>bidirectional::DiGraph</scope><name>sink_id_</name></member>
      <member refid="classbidirectional_1_1DiGraph_1a8a790a14fd031fbe7a95fefe5f01fa0c" prot="public" virt="non-virtual"><scope>bidirectional::DiGraph</scope><name>source</name></member>
      <member refid="classbidirectional_1_1DiGraph_1a1c54a9fd07eb5f07401bdbdee02ff01e" prot="private" virt="non-virtual"><scope>bidirectional::DiGraph</scope><name>source_id_</name></member>
      <member refid="classbidirectional_1_1DiGraph_1a0be9d9f87409f523306babcfef8a7f46" prot="public" virt="non-virtual"><scope>bidirectional::DiGraph</scope><name>tail</name></member>
      <member refid="classbidirectional_1_1DiGraph_1ac1922b68a5f05cc890fcad5acf0b4c35" prot="public" virt="non-virtual"><scope>bidirectional::DiGraph</scope><name>vertices</name></member>
      <member refid="classbidirectional_1_1DiGraph_1a19b9b7f89e09c77cfeb5ce3a19f2e677" prot="public" virt="non-virtual"><scope>bidirectional::DiGraph</scope><name>weight_map_ptr</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
