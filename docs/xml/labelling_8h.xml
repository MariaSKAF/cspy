<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="labelling_8h" kind="file" language="C++">
    <compoundname>labelling.h</compoundname>
    <includes local="no">cmath</includes>
    <includes local="no">set</includes>
    <includes local="no">vector</includes>
    <includes refid="digraph_8h" local="yes">src/cc/digraph.h</includes>
    <includes refid="params_8h" local="yes">src/cc/params.h</includes>
    <includedby refid="search_8h" local="yes">/__w/cspy/cspy/torressa/cspy/src/cc/search.h</includedby>
    <includedby refid="labelling_8cc" local="yes">/__w/cspy/cspy/torressa/cspy/src/cc/labelling.cc</includedby>
    <incdepgraph>
      <node id="81">
        <label>lemon/maps.h</label>
      </node>
      <node id="82">
        <label>lemon/smart_graph.h</label>
      </node>
      <node id="76">
        <label>cmath</label>
      </node>
      <node id="85">
        <label>string</label>
      </node>
      <node id="78">
        <label>vector</label>
      </node>
      <node id="83">
        <label>src/cc/params.h</label>
        <link refid="params_8h"/>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>set</label>
      </node>
      <node id="79">
        <label>src/cc/digraph.h</label>
        <link refid="digraph_8h"/>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>/__w/cspy/cspy/torressa/cspy/src/cc/labelling.h</label>
        <link refid="labelling_8h"/>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
      </node>
      <node id="84">
        <label>ref_callback.h</label>
        <link refid="ref__callback_8h"/>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
      </node>
      <node id="80">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="91">
        <label>/__w/cspy/cspy/torressa/cspy/src/cc/labelling.cc</label>
        <link refid="labelling_8cc"/>
      </node>
      <node id="89">
        <label>/__w/cspy/cspy/torressa/cspy/src/cc/bidirectional.cc</label>
        <link refid="bidirectional_8cc"/>
      </node>
      <node id="88">
        <label>/__w/cspy/cspy/torressa/cspy/src/cc/bidirectional.h</label>
        <link refid="bidirectional_8h"/>
        <childnode refid="89" relation="include">
        </childnode>
      </node>
      <node id="87">
        <label>/__w/cspy/cspy/torressa/cspy/src/cc/search.h</label>
        <link refid="search_8h"/>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
      </node>
      <node id="86">
        <label>/__w/cspy/cspy/torressa/cspy/src/cc/labelling.h</label>
        <link refid="labelling_8h"/>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
      </node>
      <node id="90">
        <label>/__w/cspy/cspy/torressa/cspy/src/cc/search.cc</label>
        <link refid="search_8cc"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classlabelling_1_1Label" prot="public">labelling::Label</innerclass>
    <innernamespace refid="namespacelabelling">labelling</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>BIDIRECTIONAL_LABELLING_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BIDIRECTIONAL_LABELLING_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>nan</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;set&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="digraph_8h" kindref="compound">src/cc/digraph.h</ref>&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>AdjVertex</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="params_8h" kindref="compound">src/cc/params.h</ref>&quot;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Directions,<sp/>Params</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacelabelling" kindref="compound">labelling</ref><sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="classlabelling_1_1Label" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classlabelling_1_1Label" kindref="compound">Label</ref><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="22" refid="classlabelling_1_1Label_1a478f34a67528586877720483c5f0d38b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlabelling_1_1Label_1a478f34a67528586877720483c5f0d38b" kindref="member">weight</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="23" refid="classlabelling_1_1Label_1a7c8972ee9d1c00fd348025c321467f75" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structbidirectional_1_1Vertex" kindref="compound">bidirectional::Vertex</ref><sp/><ref refid="classlabelling_1_1Label_1a7c8972ee9d1c00fd348025c321467f75" kindref="member">vertex</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{-1,<sp/>-1};</highlight></codeline>
<codeline lineno="24" refid="classlabelling_1_1Label_1a2c185387fad46a29bce3dd99b111a1c4" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;double&gt;<sp/><sp/><sp/><ref refid="classlabelling_1_1Label_1a2c185387fad46a29bce3dd99b111a1c4" kindref="member">resource_consumption</ref><sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="25" refid="classlabelling_1_1Label_1a7511d29a3aa0272b1a0e1ea5fb75ff14" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;int&gt;<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlabelling_1_1Label_1a7511d29a3aa0272b1a0e1ea5fb75ff14" kindref="member">partial_path</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="27" refid="classlabelling_1_1Label_1ae684804e463fe690b4fe6ee32812e123" refkind="member"><highlight class="normal"><sp/><sp/>std::set&lt;int&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlabelling_1_1Label_1ae684804e463fe690b4fe6ee32812e123" kindref="member">unreachable_nodes</ref><sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="28" refid="classlabelling_1_1Label_1a182759fd08c2536f9e6a2614c790b127" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classbidirectional_1_1Params" kindref="compound">bidirectional::Params</ref>*<sp/><ref refid="classlabelling_1_1Label_1a182759fd08c2536f9e6a2614c790b127" kindref="member">params_ptr</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Phi<sp/>value<sp/>for<sp/>joining<sp/>algorithm<sp/>from<sp/>Righini<sp/>and<sp/>Salani<sp/>(2006)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="classlabelling_1_1Label_1a632cd90937f05a8ea69ad60d4c103c66" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classlabelling_1_1Label_1a632cd90937f05a8ea69ad60d4c103c66" kindref="member">phi</ref><sp/>=<sp/>std::nan(</highlight><highlight class="stringliteral">&quot;nan&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Constructors<sp/>*/</highlight></codeline>
<codeline lineno="34" refid="classlabelling_1_1Label_1a3728b76c8b32589e04ecaac821f11733" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classlabelling_1_1Label_1a3728b76c8b32589e04ecaac821f11733" kindref="member">Label</ref>(){};</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><ref refid="classlabelling_1_1Label_1a3728b76c8b32589e04ecaac821f11733" kindref="member">Label</ref>(</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weight_in,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structbidirectional_1_1Vertex" kindref="compound">bidirectional::Vertex</ref>&amp;<sp/>vertex_in,</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;&amp;<sp/><sp/><sp/>resource_consumption_in,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int&gt;&amp;<sp/><sp/><sp/><sp/><sp/><sp/>partial_path_in,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classbidirectional_1_1Params" kindref="compound">bidirectional::Params</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>params);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><ref refid="classlabelling_1_1Label_1a3728b76c8b32589e04ecaac821f11733" kindref="member">Label</ref>(</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weight_in,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structbidirectional_1_1Vertex" kindref="compound">bidirectional::Vertex</ref>&amp;<sp/>vertex_in,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;&amp;<sp/><sp/><sp/>resource_consumption_in,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int&gt;&amp;<sp/><sp/><sp/><sp/><sp/><sp/>partial_path_in,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classbidirectional_1_1Params" kindref="compound">bidirectional::Params</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>params,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phi_in);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="classlabelling_1_1Label_1a72d8b0e24b8dbacc1ecb40b3c32265e2" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classlabelling_1_1Label_1a72d8b0e24b8dbacc1ecb40b3c32265e2" kindref="member">~Label</ref>(){};</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><ref refid="classlabelling_1_1Label" kindref="compound">Label</ref><sp/><ref refid="classlabelling_1_1Label_1a23f7e5da2fb22dca07977aad9bfa9ad3" kindref="member">extend</ref>(</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structbidirectional_1_1AdjVertex" kindref="compound">bidirectional::AdjVertex</ref>&amp;<sp/><sp/>adjacent_vertex,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacebidirectional_1a4cbe6f0bfbd3629c2cd44c98014aed70" kindref="member">bidirectional::Directions</ref>&amp;<sp/>direction,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_res<sp/>=<sp/>{},</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_res<sp/>=<sp/>{});</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlabelling_1_1Label_1ad5afbf2f5d2c6f208283021186783883" kindref="member">checkDominance</ref>(</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlabelling_1_1Label" kindref="compound">Label</ref>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>other,</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacebidirectional_1a4cbe6f0bfbd3629c2cd44c98014aed70" kindref="member">bidirectional::Directions</ref>&amp;<sp/>direction)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlabelling_1_1Label_1a3f59b4a2818a4b0096080cd5f830b73d" kindref="member">fullDominance</ref>(</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlabelling_1_1Label" kindref="compound">Label</ref>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>other,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacebidirectional_1a4cbe6f0bfbd3629c2cd44c98014aed70" kindref="member">bidirectional::Directions</ref>&amp;<sp/>direction)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlabelling_1_1Label_1adc3068c1147414d77f0f7696b4687e69" kindref="member">checkFeasibility</ref>(</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;&amp;<sp/>max_res,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;&amp;<sp/>min_res,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>soft<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlabelling_1_1Label_1a72d0d91c2d99edbcdc36aa157586cf00" kindref="member">checkThreshold</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>threshold)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlabelling_1_1Label_1a0e4957ff69cf08cfdc743df10d50d3c7" kindref="member">checkStPath</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>source_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>sink_id)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="136" refid="classlabelling_1_1Label_1afffea46e29dc7074edd10470c5dfeb87" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlabelling_1_1Label_1afffea46e29dc7074edd10470c5dfeb87" kindref="member">setPhi</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>phi_in)<sp/>{<sp/>phi<sp/>=<sp/>phi_in;<sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>operator<sp/>overloads</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><ref refid="classlabelling_1_1Label" kindref="compound">Label</ref>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlabelling_1_1Label_1a96fec70e1378988bb3d01f3aee8ab676" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlabelling_1_1Label" kindref="compound">Label</ref>&amp;<sp/>other)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlabelling_1_1Label_1aac0781be66b1d133b633cef3f60f8183" kindref="member">operator&lt;</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlabelling_1_1Label" kindref="compound">Label</ref>&amp;<sp/>label1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlabelling_1_1Label" kindref="compound">Label</ref>&amp;<sp/>label2);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlabelling_1_1Label_1a7bd46e6920cac7ede4b725f2d33fb12b" kindref="member">operator&gt;</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlabelling_1_1Label" kindref="compound">Label</ref>&amp;<sp/>label1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlabelling_1_1Label" kindref="compound">Label</ref>&amp;<sp/>label2);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>std::ostream&amp;<sp/><ref refid="classlabelling_1_1Label_1ae52256a096ed1acaf1afaba6458b42ca" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlabelling_1_1Label" kindref="compound">Label</ref>&amp;<sp/>label);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlabelling_1_1Label_1abc60b45b5a5310043283c0e6c694cc92" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlabelling_1_1Label" kindref="compound">Label</ref>&amp;<sp/>label1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlabelling_1_1Label" kindref="compound">Label</ref>&amp;<sp/>label2);</highlight></codeline>
<codeline lineno="144" refid="classlabelling_1_1Label_1a48813c4c8ca8174edcdf9cf34358b442" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlabelling_1_1Label_1a48813c4c8ca8174edcdf9cf34358b442" kindref="member">operator!=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlabelling_1_1Label" kindref="compound">Label</ref>&amp;<sp/>label1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlabelling_1_1Label" kindref="compound">Label</ref>&amp;<sp/>label2)<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(label1<sp/>==<sp/>label2);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal">};</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><ref refid="classlabelling_1_1Label" kindref="compound">Label</ref><sp/><ref refid="namespacelabelling_1a7d32365acb745f452e0b81beed2ce2be" kindref="member">getNextLabel</ref>(</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Label&gt;*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>labels,</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacebidirectional_1a4cbe6f0bfbd3629c2cd44c98014aed70" kindref="member">bidirectional::Directions</ref>&amp;<sp/>direction);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacelabelling_1a7b560c6202ef232e2bbd0dce1d3923a7" kindref="member">updateEfficientLabels</ref>(</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Label&gt;*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>efficient_labels,</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlabelling_1_1Label" kindref="compound">Label</ref>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>candidate_label,</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacebidirectional_1a4cbe6f0bfbd3629c2cd44c98014aed70" kindref="member">bidirectional::Directions</ref>&amp;<sp/>direction,</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementary);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacelabelling_1ac6d6bb89c176d0f2db264457d60c5bd8" kindref="member">runDominanceEff</ref>(</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Label&gt;*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>efficient_labels_ptr,</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlabelling_1_1Label" kindref="compound">Label</ref>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>label,</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacebidirectional_1a4cbe6f0bfbd3629c2cd44c98014aed70" kindref="member">bidirectional::Directions</ref>&amp;<sp/>direction,</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementary);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><ref refid="classlabelling_1_1Label" kindref="compound">Label</ref><sp/><ref refid="namespacelabelling_1ae172758fb8d07cc0a490d8715966e1b7" kindref="member">processBwdLabel</ref>(</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlabelling_1_1Label" kindref="compound">labelling::Label</ref>&amp;<sp/><sp/><sp/><sp/>label,</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;&amp;<sp/>max_res,</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;&amp;<sp/>cumulative_resource,</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>invert_min_res<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacelabelling_1a9c2e8f16965144d445ba68216dae648f" kindref="member">mergePreCheck</ref>(</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlabelling_1_1Label" kindref="compound">labelling::Label</ref>&amp;<sp/><sp/><sp/><sp/>fwd_label,</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlabelling_1_1Label" kindref="compound">labelling::Label</ref>&amp;<sp/><sp/><sp/><sp/>bwd_label,</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;&amp;<sp/>max_res);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacelabelling_1a5bb0d5a3d1eeb92546902c6cdc12c71d" kindref="member">getPhiValue</ref>(</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlabelling_1_1Label" kindref="compound">labelling::Label</ref>&amp;<sp/><sp/><sp/><sp/>fwd_label,</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlabelling_1_1Label" kindref="compound">labelling::Label</ref>&amp;<sp/><sp/><sp/><sp/>bwd_label,</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;&amp;<sp/>max_res);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacelabelling_1ad7fee591bcb066e39ff97138ab0ba5ca" kindref="member">halfwayCheck</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlabelling_1_1Label" kindref="compound">Label</ref>&amp;<sp/>label,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Label&gt;&amp;<sp/>labels);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><ref refid="classlabelling_1_1Label" kindref="compound">Label</ref><sp/><ref refid="namespacelabelling_1a19937349c6ec5c31d5994aac45c5d2fd" kindref="member">mergeLabels</ref>(</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlabelling_1_1Label" kindref="compound">labelling::Label</ref>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fwd_label,</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlabelling_1_1Label" kindref="compound">labelling::Label</ref>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bwd_label,</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structbidirectional_1_1AdjVertex" kindref="compound">bidirectional::AdjVertex</ref>&amp;<sp/>adj_vertex,</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structbidirectional_1_1Vertex" kindref="compound">bidirectional::Vertex</ref>&amp;<sp/><sp/><sp/><sp/>sink,</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;&amp;<sp/><sp/><sp/><sp/><sp/><sp/>max_res,</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;&amp;<sp/><sp/><sp/><sp/><sp/><sp/>min_res);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>labelling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>BIDIRECTIONAL_LABELLING_H__</highlight></codeline>
    </programlisting>
    <location file="/__w/cspy/cspy/torressa/cspy/src/cc/labelling.h"/>
  </compounddef>
</doxygen>
